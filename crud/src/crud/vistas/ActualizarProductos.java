/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package crud.vistas;

import crud.controladores.CrudControlador;
import crud.modelos.modeloProductos;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class ActualizarProductos extends javax.swing.JFrame {
    private int productoID; // Variable para almacenar el ID del producto que se está editando

    // Constructor que recibe el ID del producto a editar
    public ActualizarProductos(int productoID) {
        initComponents();
        this.productoID = productoID; // Almacena el ID del producto a editar
        cargarDatosDelProducto(productoID); // Carga los datos del producto en los campos
    }
    
    private void cargarDatosDelProducto(int productoID) {
    CrudControlador oProducto = new CrudControlador();

    // Obtén la lista de todos los productos
    ArrayList<modeloProductos> productos = oProducto.TODOS_LOS_PRODUCTOS();

    // Busca el producto con el ID proporcionado
    modeloProductos productoEncontrado = null;
    for (modeloProductos producto : productos) {
        if (producto.getProductID() == productoID) {
            productoEncontrado = producto;
            break;
        }
    }

    if (productoEncontrado != null) {
        // Muestra el ID del producto sin permitir la edición
        tfIDProducto.setText(String.valueOf(productoEncontrado.getProductID()));
        tfIDProducto.setEditable(false);

        // Rellena los otros campos del formulario con los datos del producto
        tfNombreProducto.setText(productoEncontrado.getProductName());
        tfIDProveedor.setText(String.valueOf(productoEncontrado.getSupplierID()));
        tfIDCategoria.setText(String.valueOf(productoEncontrado.getCategoryID()));
        tfCantidadPorUnidad.setText(productoEncontrado.getQuantityPerUnit());
        tfPrecioUnitario.setText(String.valueOf(productoEncontrado.getUnitPrice()));
        tfExistencia.setText(String.valueOf(productoEncontrado.getUnitsInStock()));
    } else {
        // Maneja el caso en el que no se pudo encontrar el producto con el ID especificado
        JOptionPane.showMessageDialog(this, "No se pudo encontrar el producto con ID " + productoID, "Error", JOptionPane.ERROR_MESSAGE);
        // Puedes decidir si quieres cerrar el formulario o realizar otra acción apropiada.
    }
    }
    
    /**
     * Creates new form ActualizarProductos
     */
    public ActualizarProductos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfNombreProducto = new javax.swing.JTextField();
        tfIDProveedor = new javax.swing.JTextField();
        tfIDCategoria = new javax.swing.JTextField();
        tfCantidadPorUnidad = new javax.swing.JTextField();
        tfPrecioUnitario = new javax.swing.JTextField();
        tfExistencia = new javax.swing.JTextField();
        lbNombreProducto = new javax.swing.JLabel();
        lbIDProveedor = new javax.swing.JLabel();
        lbIDCategoria = new javax.swing.JLabel();
        lbCantidadPorUnidad = new javax.swing.JLabel();
        lbPrecioUnitario = new javax.swing.JLabel();
        lbExistencia = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        tfIDProducto = new javax.swing.JTextField();
        lbIDProducto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombreProductoActionPerformed(evt);
            }
        });

        tfIDCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDCategoriaActionPerformed(evt);
            }
        });

        tfPrecioUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPrecioUnitarioActionPerformed(evt);
            }
        });

        lbNombreProducto.setText("Nombre");

        lbIDProveedor.setText("IDProveedor");

        lbIDCategoria.setText("IDCategoria");

        lbCantidadPorUnidad.setText("CantidadPorUnidad");

        lbPrecioUnitario.setText("PrecioUnitario");

        lbExistencia.setText("Existencia");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lbIDProducto.setText("IDProducto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnActualizar)
                .addGap(89, 89, 89)
                .addComponent(btnCancelar)
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbIDProveedor)
                    .addComponent(lbNombreProducto)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPrecioUnitario)
                            .addComponent(lbCantidadPorUnidad)
                            .addComponent(lbExistencia)
                            .addComponent(lbIDCategoria)))
                    .addComponent(lbIDProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfIDProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(tfExistencia)
                    .addComponent(tfIDProveedor)
                    .addComponent(tfNombreProducto)
                    .addComponent(tfIDCategoria)
                    .addComponent(tfCantidadPorUnidad)
                    .addComponent(tfPrecioUnitario))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIDProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNombreProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIDProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIDProveedor))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIDCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIDCategoria))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCantidadPorUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCantidadPorUnidad))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPrecioUnitario))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbExistencia))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnCancelar))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // Obtén los valores de los campos de texto
    // Obtén el ID del producto desde el campo no editable tfIDProducto
    int idProducto = Integer.parseInt(tfIDProducto.getText());

    // Obtén los valores de los campos de texto
    String nombreProducto = tfNombreProducto.getText();
    int idProveedor = Integer.parseInt(tfIDProveedor.getText());
    int idCategoria = Integer.parseInt(tfIDCategoria.getText());
    String cantidadPorUnidad = tfCantidadPorUnidad.getText();
    double precioUnitario = Double.parseDouble(tfPrecioUnitario.getText());
    int existencia = Integer.parseInt(tfExistencia.getText());

    // Asegúrate de que se haya ingresado un valor en todos los campos
    if (nombreProducto.isEmpty() || cantidadPorUnidad.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Llama a un método en CrudControlador para actualizar el producto
    CrudControlador oProducto = new CrudControlador();
    int filasAfectadas = oProducto.actualizar(idProducto, nombreProducto, idProveedor, idCategoria, cantidadPorUnidad, precioUnitario, existencia);

    if (filasAfectadas > 0) {
        JOptionPane.showMessageDialog(this, "Producto actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        // Cierra la ventana ActualizarProductos sin afectar la ventana principal
        dispose();
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo actualizar el producto.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tfPrecioUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPrecioUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPrecioUnitarioActionPerformed

    private void tfIDCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDCategoriaActionPerformed

    private void tfNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNombreProductoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActualizarProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel lbCantidadPorUnidad;
    private javax.swing.JLabel lbExistencia;
    private javax.swing.JLabel lbIDCategoria;
    private javax.swing.JLabel lbIDProducto;
    private javax.swing.JLabel lbIDProveedor;
    private javax.swing.JLabel lbNombreProducto;
    private javax.swing.JLabel lbPrecioUnitario;
    private javax.swing.JTextField tfCantidadPorUnidad;
    private javax.swing.JTextField tfExistencia;
    private javax.swing.JTextField tfIDCategoria;
    private javax.swing.JTextField tfIDProducto;
    private javax.swing.JTextField tfIDProveedor;
    private javax.swing.JTextField tfNombreProducto;
    private javax.swing.JTextField tfPrecioUnitario;
    // End of variables declaration//GEN-END:variables
}
